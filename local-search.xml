<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>集体智慧编程-01~02-导读与推荐系统</title>
    <link href="/2024/02/29/%E9%9B%86%E4%BD%93%E6%99%BA%E6%85%A7%E7%BC%96%E7%A8%8B-%E6%8F%90%E4%BE%9B%E6%8E%A8%E8%8D%90/"/>
    <url>/2024/02/29/%E9%9B%86%E4%BD%93%E6%99%BA%E6%85%A7%E7%BC%96%E7%A8%8B-%E6%8F%90%E4%BE%9B%E6%8E%A8%E8%8D%90/</url>
    
    <content type="html"><![CDATA[<blockquote><p>约定：</p><p>笔者本人读书笔记的行文风格，比较喜欢使用QA，采用一问一答的方式来进行学习。学习知识也并不完全是线性的我会在讲解一些具体复杂的概念之前先提出or讲解若干个知识点，来帮助大家进行学习，所以就算是零基础 没有数理统计(线性代数、离散数学、概率论)等背景的同学也应该可以看懂，如果有问题,大家的Question放在评论区我觉得必要的内容会补充到学习问题前的知识点内容里面</p><p>基本代码运行环境是 macos 、python3.10.12版本。</p><p>特别声明：部分代码由gpt4直接生成</p></blockquote><h1 id="A、导读"><a href="#A、导读" class="headerlink" title="A、导读"></a>A、导读</h1><h2 id="Q1、什么是集体智慧编程"><a href="#Q1、什么是集体智慧编程" class="headerlink" title="Q1、什么是集体智慧编程"></a>Q1、什么是集体智慧编程</h2><ul><li>集体智慧并不是说群体意识或者超自然现象</li><li>集体智慧编程 实际上是指 把一群人的行为特征 通过使用数据统计、机器学习算法的手段 总结整理或者抽象为一种可以被利用的模型，比较常见的比如说google的排序，很多人有更好评价的网页会被google放在前面</li><li>集体智慧 也可以是 整理汇总一群人的思想和知识 协作去解决某类问题，比如大家一起编辑的百度百科</li></ul><h2 id="Q2、什么是机器学习"><a href="#Q2、什么是机器学习" class="headerlink" title="Q2、什么是机器学习"></a>Q2、什么是机器学习</h2><ul><li><p>简单来说 机器学习的核心是被计算出来的数学公式。当然这样描述可能太过简单了，他的核心功能是 从数据中学习规律和模式，以此来做出预测或决策，但是不管是什么功能，他的判断或者说决策逻辑都是依赖于通过大量训练集训练出的模型参数，这些模型参数为了方便理解 我们就认为是 下面这个方程里面的a和b吧，训练的过程就是不断去计算调整a和b的过程<br>$$<br>f(x) &#x3D; ax+b<br>$$</p></li><li><p>机器学习的算法通常用两种，一种是比较直观或者说可解释的，比如说 决策树，还有一些因为参数太多了 内部计算逻辑过于复杂，我们能够观察到的就是我们输入了什么样的数据，它最终有什么样的输出，计算过程对于我们来说是比较黑盒的，比如说 神经网络，关于神经网络和多层神经网络 我们后面的文章会详细去了解这部分内容</p></li></ul><h1 id="B、提供推荐"><a href="#B、提供推荐" class="headerlink" title="B、提供推荐"></a>B、提供推荐</h1><h2 id="Q1、基本推荐系统的构成要素应该有哪些"><a href="#Q1、基本推荐系统的构成要素应该有哪些" class="headerlink" title="Q1、基本推荐系统的构成要素应该有哪些"></a>Q1、基本推荐系统的构成要素应该有哪些</h2><ul><li><p>个人认为可以核心应该是以下三个部分</p><ul><li>候选集<ul><li>你可理解 根据某种算法 从当前站内所有的内容里面挑选一部分可能和你相关的内容，后面所有的你可能看到的内容都是来自于这个集合</li></ul></li><li>过滤<ul><li>从候选集合中采用一定的算法规则进行批量的过滤</li></ul></li><li>排序<ul><li>排序一般决定就是过滤之后的你看到的内容顺序了</li></ul></li></ul></li><li><p>除此之外 还有一些工程性的模块</p><ul><li>收集<ul><li>提前采集用户信息，还有站内内容信心，为后续的候选集、过滤、排序服务</li></ul></li><li>评估<ul><li>评估召回结果的准确率，推荐的匹配率等信息</li></ul></li><li>反馈<ul><li>用户反馈反过来调整算法模型（当然一般是T+N的模式）</li></ul></li></ul><p>一个最基本的架构如下图所示：</p><img src="https://raw.githubusercontent.com/OriKey/picrep/main/img/%E6%88%AA%E5%B1%8F2024-03-03%2022.20.59.png" style="zoom:30%" /><h2 id="Q2、如何计算候选集"><a href="#Q2、如何计算候选集" class="headerlink" title="Q2、如何计算候选集"></a>Q2、如何计算候选集</h2><blockquote><p>这个问题的细节非常的复杂，我这里暂时不做详细解释</p></blockquote><ul><li><p>基于内容的推荐</p><ul><li>用户特征匹配<ul><li>根据用户过去喜欢或与之互动的物品的内容特征，如物品的类别、标签、描述等，找到具有相似特征的内容作为候选集。</li></ul></li><li>用户画像<ul><li>用户的兴趣、偏好的属性等，然后选择与用户画像匹配度高的内容</li></ul></li></ul></li><li><p>协同过滤</p><ul><li>用户-用户 协同过滤<ul><li>根据你好朋友的一些推荐，来给你进行推荐，所以就很可能出现你的朋友刚刷到的视频，你立刻刷到了的情况</li></ul></li><li>物品-物品 协同过滤<ul><li>在pdd买过东西的应该都知道，pdd的搜索推荐能力非常强，基本上除非你命中黑名单词库，不然总是能给你推荐一些和你过去购买的物品很类似的东西给你，就算是你搜的和这个东西完全不相关</li></ul></li></ul></li><li><p>基于规则的方法</p><ul><li>一般来说我们常说的推荐工程测的同学，就是在这个地方做工，举个最简单的例子，产品提一个需求，要求计算候选集合的时候给所有的人的候选集合中添加一批 站内高价值内容 就需要在候选集这个地方进行一定的改造。</li></ul></li><li><p>基于模型的方法</p><ul><li><p>矩阵分解</p><ul><li><p>这个比较常用的一个方法是SVD，这个解释起来比较麻烦，我尽量用简单语言来描述</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#假设有一个用户-物品评分矩阵，其中行代表用户，列代表物品，矩阵的值代表用户对物品的评分。在实际情况中，这样的矩阵通常是稀疏的，因为不是每个用户都对所有物品进行评分。根据下面的这个我们可以得到三个矩阵，之后我们可以根据这三个矩阵去计算用户的一些隐形偏好，比如 用户1从来没有对物品3进行打分，那么我们可以通过一定的数学手段结合这三个矩阵去算用户1对物品3的偏好程度</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> scipy.linalg <span class="hljs-keyword">import</span> svd<br><br><span class="hljs-comment"># 构造上述评分矩阵，未知评分用0代替</span><br>R = np.array([<br>    [<span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>],<br>    [<span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>],<br>    [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>],<br>    [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>]<br>])<br><br><span class="hljs-comment"># 进行SVD分解</span><br>U, sigma, VT = svd(R, full_matrices=<span class="hljs-literal">False</span>)<br>(array([[-<span class="hljs-number">0.51988645</span>, -<span class="hljs-number">0.64437991</span>,  <span class="hljs-number">0.12678468</span>, -<span class="hljs-number">0.54627672</span>],<br>        [-<span class="hljs-number">0.36357823</span>, -<span class="hljs-number">0.38059565</span>,  <span class="hljs-number">0.16697705</span>,  <span class="hljs-number">0.83371247</span>],<br>        [-<span class="hljs-number">0.49580083</span>,  <span class="hljs-number">0.19734636</span>, -<span class="hljs-number">0.84462058</span>,  <span class="hljs-number">0.04303526</span>],<br>        [-<span class="hljs-number">0.59305184</span>,  <span class="hljs-number">0.63322658</span>,  <span class="hljs-number">0.49260571</span>, -<span class="hljs-number">0.06821454</span>]]),<br> array([<span class="hljs-number">8.50590985</span>, <span class="hljs-number">5.88029226</span>, <span class="hljs-number">3.31987438</span>, <span class="hljs-number">1.74645202</span>]),<br> array([[-<span class="hljs-number">0.60459115</span>, -<span class="hljs-number">0.24165083</span>, -<span class="hljs-number">0.34861164</span>, -<span class="hljs-number">0.67419903</span>],<br>        [-<span class="hljs-number">0.66556372</span>, -<span class="hljs-number">0.29518828</span>,  <span class="hljs-number">0.53843121</span>,  <span class="hljs-number">0.42424125</span>],<br>        [ <span class="hljs-number">0.2861002</span> , -<span class="hljs-number">0.13984461</span>,  <span class="hljs-number">0.74190415</span>, -<span class="hljs-number">0.59005796</span>],<br>        [ <span class="hljs-number">0.33112104</span>, -<span class="hljs-number">0.91373532</span>, -<span class="hljs-number">0.19529462</span>,  <span class="hljs-number">0.13155466</span>]]))<br></code></pre></td></tr></table></figure></li></ul></li><li><p>深度学习网络</p><ul><li>使用比如CNN，RNN模型 对用户的历史以及物品的特征进行过滤</li></ul></li></ul><hr><p>施工部分：</p><h2 id="如何进行排序"><a href="#如何进行排序" class="headerlink" title="如何进行排序"></a>如何进行排序</h2><ul><li>召回</li><li>粗排</li><li>静排</li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>读书笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>集体智慧编程</tag>
      
      <tag>更新中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python使用技巧</title>
    <link href="/2024/02/23/python%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <url>/2024/02/23/python%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>mongo查询</title>
    <link href="/2024/02/21/mongo%E6%9F%A5%E8%AF%A2/"/>
    <url>/2024/02/21/mongo%E6%9F%A5%E8%AF%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="mongo常用filter条件"><a href="#mongo常用filter条件" class="headerlink" title="mongo常用filter条件"></a>mongo常用filter条件</h2><ul><li><p>查询某一列是否包含baidu关键字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<span class="hljs-string">&quot;_id&quot;</span>: &#123;<span class="hljs-string">&quot;<span class="hljs-variable">$regex</span>&quot;</span>: <span class="hljs-string">&quot;baidu&quot;</span>&#125;&#125;<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>mongo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>longest-palindromic-substring</title>
    <link href="/2024/02/10/longest-palindromic-substring/"/>
    <url>/2024/02/10/longest-palindromic-substring/</url>
    
    <content type="html"><![CDATA[<h2 id="about"><a href="#about" class="headerlink" title="about"></a>about</h2><p>you are given a string s, and you need found the longest palindromic substring about it</p><h2 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h2><p>this is a medium complex simulation algo，and it can be optmized by Dynamic programming</p><p>this is simulation stage code, not dunamic programmming</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs go"><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">longestPalindrome</span><span class="hljs-params">(s <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">string</span> &#123;<br><span class="hljs-comment">// 1、对每一点进行中央扩散 判断从该点延伸出去最大的回文川是多大</span><br>res := <span class="hljs-string">&quot;&quot;</span><br>runes := []<span class="hljs-type">rune</span>(s)<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(runes) &lt;= <span class="hljs-number">1</span> &#123;<br><span class="hljs-keyword">return</span> s<br>&#125;<br><span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">len</span>(runes); i++ &#123;<br><span class="hljs-comment">// 考虑两种情况</span><br><span class="hljs-comment">// 1、奇数回文</span><br>tempOddMaxString := getOddMaxString(runes, i)<br><span class="hljs-comment">// 2、偶数回文</span><br>tempEvenMaxString := getEvenMaxString(runes, i)<br>tempMaxString := tempEvenMaxString<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(tempEvenMaxString) &lt; <span class="hljs-built_in">len</span>(tempOddMaxString) &#123;<br>tempMaxString = tempOddMaxString<br>&#125;<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(tempMaxString) &gt; <span class="hljs-built_in">len</span>(res) &#123;<br>res = tempMaxString<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> res<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">getEvenMaxString</span><span class="hljs-params">(runes []<span class="hljs-type">rune</span>, i <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">string</span> &#123;<br>left := i<br>right := i + <span class="hljs-number">1</span><br><span class="hljs-keyword">for</span> left &gt;= <span class="hljs-number">0</span> &amp;&amp; right &lt;= <span class="hljs-built_in">len</span>(runes)<span class="hljs-number">-1</span> &#123;<br><span class="hljs-keyword">if</span> left &lt; <span class="hljs-number">0</span> || right &gt;= <span class="hljs-built_in">len</span>(runes) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-type">string</span>(runes[left:right])<br>&#125;<br><span class="hljs-keyword">if</span> runes[left] != runes[right] &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-type">string</span>(runes[left+<span class="hljs-number">1</span>:right])<br>&#125;<br>left = left - <span class="hljs-number">1</span><br>right = right + <span class="hljs-number">1</span><br>&#125;<br><span class="hljs-keyword">if</span> left &lt; <span class="hljs-number">0</span> || right &gt;= <span class="hljs-built_in">len</span>(runes) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-type">string</span>(runes[left+<span class="hljs-number">1</span> : right])<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-type">string</span>(runes[left : right+<span class="hljs-number">1</span>])<br>&#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">getOddMaxString</span><span class="hljs-params">(runes []<span class="hljs-type">rune</span>, i <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">string</span> &#123;<br>left, right := i, i<br><span class="hljs-keyword">for</span> left &gt;= <span class="hljs-number">0</span> &amp;&amp; right &lt;= <span class="hljs-built_in">len</span>(runes)<span class="hljs-number">-1</span> &#123;<br>left = left - <span class="hljs-number">1</span><br>right = right + <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> left &lt; <span class="hljs-number">0</span> || right &gt;= <span class="hljs-built_in">len</span>(runes) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-type">string</span>(runes[left+<span class="hljs-number">1</span> : right])<br>&#125;<br><span class="hljs-keyword">if</span> runes[left] != runes[right] &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-type">string</span>(runes[left+<span class="hljs-number">1</span> : right])<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-type">string</span>(runes[left : right+<span class="hljs-number">1</span>])<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>go</tag>
      
      <tag>simulation</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>longest-substring-without-repeating-characters</title>
    <link href="/2024/02/09/longest-substring-without-repeating-characters/"/>
    <url>/2024/02/09/longest-substring-without-repeating-characters/</url>
    
    <content type="html"><![CDATA[<p>you are given a string ‘s’ ,and return the max length and no repeat character substring of it</p><ul><li>key info<ul><li>simulation</li><li>go</li><li>sliding window</li></ul></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">lengthOfLongestSubstring</span><span class="hljs-params">(s <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">int</span> &#123;<br>helpMap := <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-type">rune</span>]<span class="hljs-type">int</span>)<br>firstPoint := <span class="hljs-number">0</span><br>secondPoint := <span class="hljs-number">0</span><br>runes := []<span class="hljs-type">rune</span>(s)<br>maxLength := <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> firstPoint &lt; <span class="hljs-built_in">len</span>(runes) &#123;<br>firstRune := runes[firstPoint]<br>value, ok := helpMap[firstRune]<br><span class="hljs-keyword">if</span> ok &#123;<br>helpMap[firstRune] = value + <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> helpMap[firstRune] &gt; <span class="hljs-number">1</span> &#123;<br><span class="hljs-keyword">if</span> firstPoint-secondPoint &gt; maxLength &#123;<br>maxLength = firstPoint - secondPoint<br>&#125;<br><span class="hljs-keyword">for</span> secondPoint &lt;= firstPoint &#123;<br>secondRune := runes[secondPoint]<br>_, ok := helpMap[secondRune]<br><span class="hljs-keyword">if</span> ok &#123;<br>helpMap[secondRune] = helpMap[secondRune] - <span class="hljs-number">1</span><br>&#125;<br>secondPoint = secondPoint + <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> helpMap[firstRune] &lt;= <span class="hljs-number">1</span> &#123;<br><span class="hljs-keyword">break</span><br>&#125;<br>&#125;<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>helpMap[firstRune] = <span class="hljs-number">1</span><br>&#125;<br>firstPoint = firstPoint + <span class="hljs-number">1</span><br>&#125;<br><span class="hljs-keyword">if</span> firstPoint-secondPoint &gt; maxLength &#123;<br>maxLength = firstPoint - secondPoint<br>&#125;<br><span class="hljs-keyword">return</span> maxLength<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>go</tag>
      
      <tag>simulation</tag>
      
      <tag>sliding window</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>add-two-numbers</title>
    <link href="/2024/02/09/add-two-numbers/"/>
    <url>/2024/02/09/add-two-numbers/</url>
    
    <content type="html"><![CDATA[<h2 id="add-two-numbers"><a href="#add-two-numbers" class="headerlink" title="add-two-numbers"></a>add-two-numbers</h2><p>give you two linked list that non-empty and the digits is reversed store by them. you need to add every node of them and returen the sum as a linked list</p><ul><li>key info<ul><li>linkedList</li><li>go</li><li>simulation</li></ul></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Definition for singly-linked list.</span><br><span class="hljs-comment"> * type ListNode struct &#123;</span><br><span class="hljs-comment"> *     Val int</span><br><span class="hljs-comment"> *     Next *ListNode</span><br><span class="hljs-comment"> * &#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">addTwoNumbers</span><span class="hljs-params">(l1 *ListNode, l2 *ListNode)</span></span> *ListNode &#123;<br>    headNode := &amp;ListNode&#123;&#125;<br>    curNode := headNode<br><br>    cur_flag := <span class="hljs-number">0</span><br><br>    <span class="hljs-keyword">for</span> l1!=<span class="hljs-literal">nil</span> || l2!=<span class="hljs-literal">nil</span> &#123;<br>        l1Val := <span class="hljs-number">0</span><br>        l2Val := <span class="hljs-number">0</span><br>        <span class="hljs-keyword">if</span> l1!=<span class="hljs-literal">nil</span> &#123;<br>            l1Val = l1.Val<br>            l1 = l1.Next<br>        &#125;<br>        <span class="hljs-keyword">if</span> l2!=<span class="hljs-literal">nil</span> &#123;<br>            l2Val = l2.Val<br>            l2 = l2.Next<br>        &#125;<br>        tempRes := l1Val + cur_flag + l2Val<br>        <span class="hljs-keyword">if</span> tempRes &gt;=<span class="hljs-number">10</span> &#123;<br>            tempRes -=<span class="hljs-number">10</span><br>            cur_flag = <span class="hljs-number">1</span><br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            cur_flag = <span class="hljs-number">0</span><br>        &#125;<br>        temNode := &amp;ListNode&#123;&#125;<br>        temNode.Val = tempRes<br>        curNode.Next = temNode<br>        curNode = curNode.Next<br>    &#125;<br>    <span class="hljs-keyword">if</span> cur_flag==<span class="hljs-number">1</span> &#123;<br>        tempNode := &amp;ListNode&#123;&#125;<br>        tempNode.Val = <span class="hljs-number">1</span><br>        curNode.Next = tempNode<br>    &#125;<br>    <span class="hljs-keyword">return</span> headNode.Next<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>leetcode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>英语单词-随手记</title>
    <link href="/2024/02/09/%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D-%E9%9A%8F%E6%89%8B%E8%AE%B0/"/>
    <url>/2024/02/09/%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D-%E9%9A%8F%E6%89%8B%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
    
    <tags>
      
      <tag>语言学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>口琴谱-美丽之物</title>
    <link href="/2024/02/09/%E5%8F%A3%E7%90%B4%E8%B0%B1-%E7%BE%8E%E4%B8%BD%E4%B9%8B%E7%89%A9/"/>
    <url>/2024/02/09/%E5%8F%A3%E7%90%B4%E8%B0%B1-%E7%BE%8E%E4%B8%BD%E4%B9%8B%E7%89%A9/</url>
    
    <content type="html"><![CDATA[<p>来源clock</p><p><img src="https://raw.githubusercontent.com/OriKey/picrep/main/img/image-20240209125510484.png" alt="image-20240209125510484"></p><h2 id="4-7-1-2-1-76-4-323-6-4"><a href="#4-7-1-2-1-76-4-323-6-4" class="headerlink" title="#4 7 [#1 2#1] 76#4 323 6 #4"></a>#4 7 [#1 2#1] 76#4 323 6 #4</h2><h2 id="7-1-2-1-76-4-432-322"><a href="#7-1-2-1-76-4-432-322" class="headerlink" title="7[#1 2#1]76#4 #432 322"></a>7[#1 2#1]76#4 #432 322</h2><h2 id="7-1-2-1-76-4-432-36-4"><a href="#7-1-2-1-76-4-432-36-4" class="headerlink" title="7[#1 2#1]76#4 #432 36#4"></a>7[#1 2#1]76#4 #432 36#4</h2><h2 id="432-36-4-432-322"><a href="#432-36-4-432-322" class="headerlink" title="#432 36#4 #432 322"></a>#432 36#4 #432 322</h2><h2 id="伴奏口琴旋律：4321-6-545-1-6"><a href="#伴奏口琴旋律：4321-6-545-1-6" class="headerlink" title="伴奏口琴旋律：4321(6) (545)1(6)"></a>伴奏口琴旋律：4321(6) (545)1(6)</h2><h2 id="23-43-21-6-54-544"><a href="#23-43-21-6-54-544" class="headerlink" title="23 43 21 (6 54 544)"></a>23 43 21 (6 54 544)</h2><h2 id="23-43-21-6-545-1-6-6545-1-6-654-544"><a href="#23-43-21-6-545-1-6-6545-1-6-654-544" class="headerlink" title="23 43 21 (6 545)1(6 6545)1(6 654 544)"></a>23 43 21 (6 545)1(6 6545)1(6 654 544)</h2><h2 id="6-66675-43-33-45-432-7-12-4323"><a href="#6-66675-43-33-45-432-7-12-4323" class="headerlink" title="6 66675#43 33 #45#432 (7)#12 #4323"></a>6 66675#43 33 #45#432 (7)#12 #4323</h2><h2 id="23-456-66-75-43-3-46322-7-12-4323"><a href="#23-456-66-75-43-3-46322-7-12-4323" class="headerlink" title="23#456 66 75#43 3#46322 (7)#12 #4323"></a>23#456 66 75#43 3#46322 (7)#12 #4323</h2><h2 id="6-6675-43-3-45-432-7-12-4323"><a href="#6-6675-43-3-45-432-7-12-4323" class="headerlink" title="6 6675#43 3 #45#432 (7)#12 #4323"></a>6 6675#43 3 #45#432 (7)#12 #4323</h2><h2 id="23-456-6675-43-3-4-2-1-6-4-23-4-5-433"><a href="#23-456-6675-43-3-4-2-1-6-4-23-4-5-433" class="headerlink" title="23#456 6675#43 3#4[2#1]6#4 23#4 5#433"></a>23#456 6675#43 3#4[2#1]6#4 23#4 5#433</h2><h2 id="23456-56-11-55-654-45432-21"><a href="#23456-56-11-55-654-45432-21" class="headerlink" title="23456 56[11]55 654 45432 21"></a>23456 56[11]55 654 45432 21</h2><h2 id="7776-7-12-1-1-1-7-1-76"><a href="#7776-7-12-1-1-1-7-1-76" class="headerlink" title="7776 7[#12] [#1#1#1]7[#1]76"></a>7776 7[#12] [#1#1#1]7[#1]76</h2><h2 id="7-123-456-4-6-7-1"><a href="#7-123-456-4-6-7-1" class="headerlink" title="(7)#123#456 #4 #6 7 [#1]"></a>(7)#123#456 #4 #6 7 [#1]</h2><h2 id="2-1-76-4-3236-4-47-1-2-1-76-4-432-322"><a href="#2-1-76-4-3236-4-47-1-2-1-76-4-432-322" class="headerlink" title="[2#1]76#4 3236#4 #47[#1 2#1]76#4 #432 322"></a>[2#1]76#4 3236#4 #47[#1 2#1]76#4 #432 322</h2><h2 id="7-1-2-1-76-4-432-36-4-432-36-4-432-322"><a href="#7-1-2-1-76-4-432-36-4-432-36-4-432-322" class="headerlink" title="7[#1 2#1]76#4 #432 36#4 #432 36#4 #432 322"></a>7[#1 2#1]76#4 #432 36#4 #432 36#4 #432 322</h2><h2 id="然后以上重复一遍"><a href="#然后以上重复一遍" class="headerlink" title="然后以上重复一遍"></a>然后以上重复一遍</h2><h2 id="23456-6654-3456-66-6654454"><a href="#23456-6654-3456-66-6654454" class="headerlink" title="23456 #6654 3456 #66#6654454"></a>23456 #6654 3456 #66#6654454</h2><h2 id="234566-665-4564-211-665-64"><a href="#234566-665-4564-211-665-64" class="headerlink" title="234566#665 4564 [211]#665 64"></a>234566#665 4564 [211]#665 64</h2><h2 id="5-4-3-23-4-7-5-4-5-5"><a href="#5-4-3-23-4-7-5-4-5-5" class="headerlink" title="#5#4 3#23#4 7#5 #4#5#5"></a>#5#4 3#23#4 7#5 #4#5#5</h2><h2 id="13-4-5-5-5-4-5-13-4-5-5-56-5-43-4-47"><a href="#13-4-5-5-5-4-5-13-4-5-5-56-5-43-4-47" class="headerlink" title="#13#4 #5#5#5#4#5 #13#4 #5#5#56 #5#43#4 #47"></a>#13#4 #5#5#5#4#5 #13#4 #5#5#56 #5#43#4 #47</h2><h2 id="1-2-4-4-4-5676-5-43-76"><a href="#1-2-4-4-4-5676-5-43-76" class="headerlink" title="#1#2#4#4#4 #5676#5#43 76"></a>#1#2#4#4#4 #5676#5#43 76</h2><h2 id="67-1-667-1-1-77"><a href="#67-1-667-1-1-77" class="headerlink" title="67[#1] 667 [#1 #1]77"></a>67[#1] 667 [#1 #1]77</h2><h2 id="4-5-6-567-3-1-1-7-6-5-433"><a href="#4-5-6-567-3-1-1-7-6-5-433" class="headerlink" title="#4#5 6#567 3[#1#1]7 6#5#433"></a>#4#5 6#567 3[#1#1]7 6#5#433</h2><h2 id="4-5-6-567-3-1-1-1-7-6-5-43-4"><a href="#4-5-6-567-3-1-1-1-7-6-5-43-4" class="headerlink" title="#4#5 6#567 3[#1#1#1]7 6#5#43#4"></a>#4#5 6#567 3[#1#1#1]7 6#5#43#4</h2><h2 id="4-5-6-567-3-1-1-7-6-5-433-1"><a href="#4-5-6-567-3-1-1-7-6-5-433-1" class="headerlink" title="#4#5 6#567 3[#1#1]7 6#5#433"></a>#4#5 6#567 3[#1#1]7 6#5#433</h2><h2 id="4-5-6-567-3-1-1-1-7-6-5-43-4-1"><a href="#4-5-6-567-3-1-1-1-7-6-5-43-4-1" class="headerlink" title="#4#5 6#567 3[#1#1#1]7 6#5#43#4"></a>#4#5 6#567 3[#1#1#1]7 6#5#43#4</h2><h2 id="47-1-2-1-76-4-3236-4-47-1-2-1-76-4-432-322"><a href="#47-1-2-1-76-4-3236-4-47-1-2-1-76-4-432-322" class="headerlink" title="#47[#1 2#1]76#4 3236#4 #47[#1 2#1]76#4 #432 322"></a>#47[#1 2#1]76#4 3236#4 #47[#1 2#1]76#4 #432 322</h2><h2 id="7-1-2-1-76-4-432-36-4-432-36-4-432-322-1"><a href="#7-1-2-1-76-4-432-36-4-432-36-4-432-322-1" class="headerlink" title="7[#1 2#1]76#4 #432 36#4 #432 36#4 #432 322"></a>7[#1 2#1]76#4 #432 36#4 #432 36#4 #432 322</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>mac工具-sublime</title>
    <link href="/2024/02/03/mac%E5%B7%A5%E5%85%B7-sublime/"/>
    <url>/2024/02/03/mac%E5%B7%A5%E5%85%B7-sublime/</url>
    
    <content type="html"><![CDATA[<h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><p>编辑首行：cmd shift L</p>]]></content>
    
    
    
    <tags>
      
      <tag>工具使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>口琴谱-天空之城</title>
    <link href="/2024/02/03/%E5%8F%A3%E7%90%B4%E8%B0%B1-%E5%A4%A9%E7%A9%BA%E4%B9%8B%E5%9F%8E/"/>
    <url>/2024/02/03/%E5%8F%A3%E7%90%B4%E8%B0%B1-%E5%A4%A9%E7%A9%BA%E4%B9%8B%E5%9F%8E/</url>
    
    <content type="html"><![CDATA[<h2 id="67-1-7-1-3-7"><a href="#67-1-7-1-3-7" class="headerlink" title="(67)1(7)1 3(7)"></a>(67)1(7)1 3(7)</h2><h2 id="33656-1-5"><a href="#33656-1-5" class="headerlink" title="(33656)1(5)"></a>(33656)1(5)</h2><h2 id="33434-1-3"><a href="#33434-1-3" class="headerlink" title="(33434)1(3)"></a>(33434)1(3)</h2><h2 id="111-7-4-4-77"><a href="#111-7-4-4-77" class="headerlink" title="111(7)(#4#4)(77)"></a>111(7)(#4#4)(77)</h2><h2 id="67-1-7-1-3-7-1"><a href="#67-1-7-1-3-7-1" class="headerlink" title="(67)1(7)1 3(7)"></a>(67)1(7)1 3(7)</h2><h2 id="33656-1-5-1"><a href="#33656-1-5-1" class="headerlink" title="(33656)1(5)"></a>(33656)1(5)</h2><h2 id="234-1-7-1-22-31"><a href="#234-1-7-1-22-31" class="headerlink" title="(234)1 (7) 1 22 31~"></a>(234)1 (7) 1 22 31~</h2><h2 id="1-7667-56"><a href="#1-7667-56" class="headerlink" title="1 (7667#56)"></a>1 (7667#56)</h2><h2 id="1232352"><a href="#1232352" class="headerlink" title="1232352"></a>1232352</h2><h2 id="55-1-7-133"><a href="#55-1-7-133" class="headerlink" title="(55)1(7)133"></a>(55)1(7)133</h2><h2 id="67-1-7-12-1-55-43213"><a href="#67-1-7-12-1-55-43213" class="headerlink" title="(67)1 (7)12 1(55) 43213~"></a>(67)1 (7)12 1(55) 4<del>3</del>2<del>1</del>3~</h2><h2 id="36-55321-121253"><a href="#36-55321-121253" class="headerlink" title="36 55321 121253"></a>36 55321 121253</h2><h2 id="36-55-321-1212-76"><a href="#36-55-321-1212-76" class="headerlink" title="36 55 321 1212(76)"></a>36 55 321 1212(76)</h2><h2 id="67-1-7-1-3-7-2"><a href="#67-1-7-1-3-7-2" class="headerlink" title="(67)1(7)1 3(7)"></a>(67)1(7)1 3(7)</h2><h2 id="33656-1-5-2"><a href="#33656-1-5-2" class="headerlink" title="(33656)1(5)"></a>(33656)1(5)</h2><h2 id="33434-1-3-1"><a href="#33434-1-3-1" class="headerlink" title="(33434)1(3)"></a>(33434)1(3)</h2><h2 id="111-7-4-4-77-1"><a href="#111-7-4-4-77-1" class="headerlink" title="111(7)(#4#4)(77)"></a>111(7)(#4#4)(77)</h2><h2 id="67-1-7-1-3-7-3"><a href="#67-1-7-1-3-7-3" class="headerlink" title="(67)1(7)1 3(7)"></a>(67)1(7)1 3(7)</h2><h2 id="33656-1-5-3"><a href="#33656-1-5-3" class="headerlink" title="(33656)1(5)"></a>(33656)1(5)</h2><h2 id="234-1-7-1-22-31-1"><a href="#234-1-7-1-22-31-1" class="headerlink" title="(234)1 (7) 1 22 31~"></a>(234)1 (7) 1 22 31~</h2><h2 id="1-7667-56-1"><a href="#1-7667-56-1" class="headerlink" title="1 (7667#56)"></a>1 (7667#56)</h2><h2 id="36-55321-121253-1"><a href="#36-55321-121253-1" class="headerlink" title="36 55321 121253"></a>36 55321 121253</h2><h2 id="36-55-321-1212-76-1"><a href="#36-55-321-1212-76-1" class="headerlink" title="36 55 321 1212(76)"></a>36 55 321 1212(76)</h2><h2 id="67【1】7【1-3】7"><a href="#67【1】7【1-3】7" class="headerlink" title="67【1】7【1 3】7"></a>67【1】7【1 3】7</h2><h2 id="33656【1】5"><a href="#33656【1】5" class="headerlink" title="33656【1】5"></a>33656【1】5</h2><h2 id="33434【1】3"><a href="#33434【1】3" class="headerlink" title="33434【1】3"></a>33434【1】3</h2><h2 id="【111】7-4-477"><a href="#【111】7-4-477" class="headerlink" title="【111】7#4#477"></a>【111】7#4#477</h2><h2 id="67【1】7【1-3】7-1"><a href="#67【1】7【1-3】7-1" class="headerlink" title="67【1】7【1 3】7"></a>67【1】7【1 3】7</h2><h2 id="33656【1】5-1"><a href="#33656【1】5-1" class="headerlink" title="33656【1】5"></a>33656【1】5</h2><h2 id="234【1】7【-1-22-31-】"><a href="#234【1】7【-1-22-31-】" class="headerlink" title="234【1】7【 1 22 31~】"></a>234【1】7【 1 22 31~】</h2><h2 id="【1】-7667-56"><a href="#【1】-7667-56" class="headerlink" title="【1】 7667#56"></a>【1】 7667#56</h2>]]></content>
    
    
    <categories>
      
      <category>口琴简谱</category>
      
    </categories>
    
    
    <tags>
      
      <tag>口琴</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>增长裂变-技术方案讲解</title>
    <link href="/2024/02/02/%E5%A2%9E%E9%95%BF%E8%A3%82%E5%8F%98-%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88%E8%AE%B2%E8%A7%A3/"/>
    <url>/2024/02/02/%E5%A2%9E%E9%95%BF%E8%A3%82%E5%8F%98-%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88%E8%AE%B2%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>技术方案</category>
      
    </categories>
    
    
    <tags>
      
      <tag>orikey的私房菜</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大模型之RAG</title>
    <link href="/2024/02/02/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E4%B9%8BRAG/"/>
    <url>/2024/02/02/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E4%B9%8BRAG/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>无限进步</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>只狼全boss游戏攻略</title>
    <link href="/2024/02/02/%E5%8F%AA%E7%8B%BC%E5%85%A8boss%E6%B8%B8%E6%88%8F%E6%94%BB%E7%95%A5/"/>
    <url>/2024/02/02/%E5%8F%AA%E7%8B%BC%E5%85%A8boss%E6%B8%B8%E6%88%8F%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<blockquote><p>超喜欢打铁</p></blockquote><p>1、大将</p><p>2、赤鬼</p><p>3、第二个大将</p><p>4、鬼刑部</p><p>5、火牛</p><p>6、七本枪</p><p>7、门前大将</p>]]></content>
    
    
    <categories>
      
      <category>魂类游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>games</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>orikey的pr</title>
    <link href="/2024/02/02/orikey%E7%9A%84pr/"/>
    <url>/2024/02/02/orikey%E7%9A%84pr/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>vim工具集合-vim/vimium</title>
    <link href="/2024/02/02/vim%E5%B7%A5%E5%85%B7%E9%9B%86%E5%90%88-vim-vimium/"/>
    <url>/2024/02/02/vim%E5%B7%A5%E5%85%B7%E9%9B%86%E5%90%88-vim-vimium/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>mac工具-pbcopy/pbpaste</title>
    <link href="/2024/02/02/mac%E5%B7%A5%E5%85%B7-pbcopy-pbpaste/"/>
    <url>/2024/02/02/mac%E5%B7%A5%E5%85%B7-pbcopy-pbpaste/</url>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>linux工具-grepawkxargs</title>
    <link href="/2024/02/02/linux%E5%B7%A5%E5%85%B7-grepawkxargs/"/>
    <url>/2024/02/02/linux%E5%B7%A5%E5%85%B7-grepawkxargs/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>python自带的小工具</title>
    <link href="/2024/02/02/python%E8%87%AA%E5%B8%A6%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    <url>/2024/02/02/python%E8%87%AA%E5%B8%A6%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<h2 id="开启一个小的服务器"><a href="#开启一个小的服务器" class="headerlink" title="开启一个小的服务器"></a>开启一个小的服务器</h2><p> python -m SimpleHTTPServer 8000</p><p>非常有用 进行一些服务器传输的时候</p>]]></content>
    
    
    
    <tags>
      
      <tag>orikey的私房菜</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>add-two-numbersTwoSum</title>
    <link href="/2024/02/01/AddTwoNumbers/"/>
    <url>/2024/02/01/AddTwoNumbers/</url>
    
    <content type="html"><![CDATA[<h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Definition for singly-linked list.</span><br><span class="hljs-comment"> * type ListNode struct &#123;</span><br><span class="hljs-comment"> *     Val int</span><br><span class="hljs-comment"> *     Next *ListNode</span><br><span class="hljs-comment"> * &#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">addTwoNumbers</span><span class="hljs-params">(l1 *ListNode, l2 *ListNode)</span></span> *ListNode &#123;<br>    curFlag :=<span class="hljs-number">0</span><br>    head := &amp;ListNode&#123;&#125;<br>    root := head<br>    <span class="hljs-keyword">for</span> l1!=<span class="hljs-literal">nil</span> || l2!=<span class="hljs-literal">nil</span>&#123;<br>        l1Val := <span class="hljs-number">0</span><br>        l2Val := <span class="hljs-number">0</span><br>        <span class="hljs-keyword">if</span> l1 !=<span class="hljs-literal">nil</span>&#123;<br>            l1Val = l1.Val<br>            l1 = l1.Next<br>            <br>        &#125;<br>        <span class="hljs-keyword">if</span> l2 != <span class="hljs-literal">nil</span> &#123;<br>        l2Val = l2.Val<br>            l2 = l2.Next<br><br>        &#125;<br>        temp := curFlag + l1Val + l2Val <br>        <span class="hljs-keyword">if</span> temp&gt;=<span class="hljs-number">10</span>&#123;<br>            temp -=<span class="hljs-number">10</span><br>            curFlag = <span class="hljs-number">1</span><br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            curFlag = <span class="hljs-number">0</span><br>        &#125;<br>        tempNode := &amp;ListNode&#123;&#125;<br>        tempNode.Val = temp<br>        root.Next = tempNode<br>        root = root.Next<br>    &#125;<br>    <span class="hljs-keyword">if</span> curFlag ==<span class="hljs-number">1</span>&#123;<br>        root.Next = &amp;ListNode&#123;<br>            Val : <span class="hljs-number">1</span>,<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> head.Next<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>algo</tag>
      
      <tag>go</tag>
      
      <tag>linkedlist</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TwoSum</title>
    <link href="/2024/02/01/TwoSum/"/>
    <url>/2024/02/01/TwoSum/</url>
    
    <content type="html"><![CDATA[<p>link : <a href="https://leetcode.com/problems/two-sum/description/">https://leetcode.com/problems/two-sum/description/</a></p><h2 id="backgroud-knowlege"><a href="#backgroud-knowlege" class="headerlink" title="backgroud knowlege"></a>backgroud knowlege</h2><ul><li>use go build-in struture whitch that like map or slice</li></ul><h2 id="about-problem"><a href="#about-problem" class="headerlink" title="about problem"></a>about problem</h2><p>Give you two array of Integer and give you an integar target, you need to return a indices of the numbers such that they add up to target.</p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs prolog"><span class="hljs-symbol">Input</span>: nums = [<span class="hljs-number">2</span>,<span class="hljs-number">7</span>,<span class="hljs-number">11</span>,<span class="hljs-number">15</span>], target = <span class="hljs-number">9</span><br><span class="hljs-symbol">Output</span>: [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]<br><span class="hljs-symbol">Explanation</span>: <span class="hljs-symbol">Because</span> nums[<span class="hljs-number">0</span>] + nums[<span class="hljs-number">1</span>] == <span class="hljs-number">9</span>, we return [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>].<br></code></pre></td></tr></table></figure><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">twoSum</span><span class="hljs-params">(nums []<span class="hljs-type">int</span>, target <span class="hljs-type">int</span>)</span></span> []<span class="hljs-type">int</span> &#123;<br>    temp_map := <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-type">int</span>]<span class="hljs-type">int</span>)<br>    <span class="hljs-keyword">for</span> i:=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">len</span>(nums);i++&#123;<br>        remainValue := target - nums[i] <br>        value,ok :=  temp_map[remainValue]<br>        <span class="hljs-keyword">if</span> ok &#123;<br>            <span class="hljs-keyword">return</span> []<span class="hljs-type">int</span>&#123;i,value&#125;<br>        &#125;<br>        temp_map[nums[i]] = i<br>    &#125;<br>    <span class="hljs-keyword">return</span> []<span class="hljs-type">int</span>&#123;<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>algo</tag>
      
      <tag>go</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>screen</title>
    <link href="/2024/01/31/screen/"/>
    <url>/2024/01/31/screen/</url>
    
    <content type="html"><![CDATA[<h2 id="关于screen"><a href="#关于screen" class="headerlink" title="关于screen"></a>关于screen</h2><p>常用命令：</p><table><thead><tr><th>代码命令</th><th>作用</th><th>其他</th></tr></thead><tbody><tr><td>screen -S xxx</td><td>新建一个会话</td><td></td></tr><tr><td>screen -D xxx</td><td>将某个会话现在访问的人踢掉</td><td></td></tr><tr><td>screen -r xxx</td><td>进入某个已经存在的会话</td><td></td></tr><tr><td>screen -ls xxx</td><td>查看当前所有的会话</td><td></td></tr><tr><td>screen -S xxx -X quit</td><td>删除某个会话</td><td></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>个人博客收藏</title>
    <link href="/2024/01/30/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%94%B6%E8%97%8F/"/>
    <url>/2024/01/30/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%94%B6%E8%97%8F/</url>
    
    <content type="html"><![CDATA[<ul><li><p>网易云RTA投放 <a href="https://mp.weixin.qq.com/s/kW5_lootLn8y1apAWsiqLQ">https://mp.weixin.qq.com/s/kW5_lootLn8y1apAWsiqLQ</a></p></li><li><p>JVM问题cookbook <a href="https://mp.weixin.qq.com/s/zshcVuQreAB8YHwjBL0EmA">https://mp.weixin.qq.com/s/zshcVuQreAB8YHwjBL0EmA</a></p></li><li><p>RTB <a href="https://www.woshipm.com/marketing/5926942.html">https://www.woshipm.com/marketing/5926942.html</a></p></li><li><p>RTA <a href="https://m.saikr.com/a/559962">https://m.saikr.com/a/559962</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>orikey亲选</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>广告投放常见概念</title>
    <link href="/2024/01/30/%E5%B9%BF%E5%91%8A%E6%8A%95%E6%94%BE%E5%B8%B8%E8%A7%81%E6%A6%82%E5%BF%B5/"/>
    <url>/2024/01/30/%E5%B9%BF%E5%91%8A%E6%8A%95%E6%94%BE%E5%B8%B8%E8%A7%81%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>业务领域知识</category>
      
      <category>doing</category>
      
    </categories>
    
    
    <tags>
      
      <tag>orikey的私房菜</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【问题排查】hexo-git无法正常推送</title>
    <link href="/2024/01/28/%E3%80%90%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E3%80%91hexo-git%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%8E%A8%E9%80%81/"/>
    <url>/2024/01/28/%E3%80%90%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E3%80%91hexo-git%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%8E%A8%E9%80%81/</url>
    
    <content type="html"><![CDATA[<h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><p>已经全程挂了clashX并且给命令行设置上代理了，但是hexo d -g无法推送</p><p><img src="https://raw.githubusercontent.com/OriKey/picrep/main/img/image-20240128185101137.png" alt="image-20240128185101137"></p><h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><p>~&#x2F;.ssh&#x2F;config修改成我底下这个样子</p><p><img src="https://raw.githubusercontent.com/OriKey/picrep/main/img/%E6%88%AA%E5%B1%8F2024-01-28%2018.53.51.png" alt="截屏2024-01-28 18.53.51"></p><p>千万要记得 里面一些自定义项改成自己的:joy:</p>]]></content>
    
    
    
    <tags>
      
      <tag>疑难杂症</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>口琴谱-老男孩</title>
    <link href="/2024/01/28/%E5%8F%A3%E7%90%B4%E8%B0%B1-%E8%80%81%E7%94%B7%E5%AD%A9/"/>
    <url>/2024/01/28/%E5%8F%A3%E7%90%B4%E8%B0%B1-%E8%80%81%E7%94%B7%E5%AD%A9/</url>
    
    <content type="html"><![CDATA[<p>吹奏难度：3</p><h2 id="55555654367-1-75"><a href="#55555654367-1-75" class="headerlink" title="(55555654367)1(75)"></a>(55555654367)1(75)</h2><h2 id="55611235"><a href="#55611235" class="headerlink" title="(55611235)"></a>(55611235)</h2><h2 id="545212"><a href="#545212" class="headerlink" title="(545212)"></a>(545212)</h2><h2 id="55555654367-1-75-1"><a href="#55555654367-1-75-1" class="headerlink" title="(55555654367)1(75)"></a>(55555654367)1(75)</h2><h2 id="55611235-1"><a href="#55611235-1" class="headerlink" title="(55611235)"></a>(55611235)</h2><h2 id="545211"><a href="#545211" class="headerlink" title="(545211)"></a>(545211)</h2><h2 id="1-7-6-7-123-7"><a href="#1-7-6-7-123-7" class="headerlink" title="1(7)(6)(7)123(7)"></a>1(7)(6)(7)123(7)</h2><h2 id="5-5-6-3211"><a href="#5-5-6-3211" class="headerlink" title="(5)(5)(6)3211"></a>(5)(5)(6)3211</h2><h2 id="1-7-6-7-123-7-1"><a href="#1-7-6-7-123-7-1" class="headerlink" title="1(7)(6)(7)123(7)"></a>1(7)(6)(7)123(7)</h2><h2 id="5-5-6-3211-1"><a href="#5-5-6-3211-1" class="headerlink" title="(5)(5)(6)3211"></a>(5)(5)(6)3211</h2><h2 id="1155555-7-7"><a href="#1155555-7-7" class="headerlink" title="1155555(7)(7)"></a>1155555(7)(7)</h2><h2 id="7-7-5556511"><a href="#7-7-5556511" class="headerlink" title="(7)(7)5556511"></a>(7)(7)5556511</h2><h2 id="12-3243-3243-32435"><a href="#12-3243-3243-32435" class="headerlink" title="12 3243 3243 32435"></a>12 3243 3243 32435</h2><h2 id="1155555-7-7-1"><a href="#1155555-7-7-1" class="headerlink" title="1155555(7)(7)"></a>1155555(7)(7)</h2><h2 id="7-7-5556511-1"><a href="#7-7-5556511-1" class="headerlink" title="(7)(7)5556511"></a>(7)(7)5556511</h2><h2 id="12-3243-321-7-1"><a href="#12-3243-321-7-1" class="headerlink" title="12 3243 321(7)1"></a>12 3243 321(7)1</h2><h2 id="55555654367-1-75-2"><a href="#55555654367-1-75-2" class="headerlink" title="(55555654367)1(75)"></a>(55555654367)1(75)</h2><h2 id="55611235-2"><a href="#55611235-2" class="headerlink" title="(55611235)"></a>(55611235)</h2><h2 id="545212-1"><a href="#545212-1" class="headerlink" title="(545212)"></a>(545212)</h2><h2 id="55555654367-1-75-3"><a href="#55555654367-1-75-3" class="headerlink" title="(55555654367)1(75)"></a>(55555654367)1(75)</h2><h2 id="55611235-3"><a href="#55611235-3" class="headerlink" title="(55611235)"></a>(55611235)</h2><h2 id="545211-1"><a href="#545211-1" class="headerlink" title="(545211)"></a>(545211)</h2><h2 id="1-7-6-7-123-7-2"><a href="#1-7-6-7-123-7-2" class="headerlink" title="1(7)(6)(7)123(7)"></a>1(7)(6)(7)123(7)</h2><h2 id="5-5-6-3211-2"><a href="#5-5-6-3211-2" class="headerlink" title="(5)(5)(6)3211"></a>(5)(5)(6)3211</h2><h2 id="1-7-6-7-123-7-3"><a href="#1-7-6-7-123-7-3" class="headerlink" title="1(7)(6)(7)123(7)"></a>1(7)(6)(7)123(7)</h2><h2 id="5-5-6-3211-3"><a href="#5-5-6-3211-3" class="headerlink" title="(5)(5)(6)3211"></a>(5)(5)(6)3211</h2><h2 id="1155555-7-7-2"><a href="#1155555-7-7-2" class="headerlink" title="1155555(7)(7)"></a>1155555(7)(7)</h2><h2 id="7-7-5556511-2"><a href="#7-7-5556511-2" class="headerlink" title="(7)(7)5556511"></a>(7)(7)5556511</h2><h2 id="12-3243-3243-32435-1"><a href="#12-3243-3243-32435-1" class="headerlink" title="12 3243 3243 32435"></a>12 3243 3243 32435</h2><h2 id="1155555-7-7-3"><a href="#1155555-7-7-3" class="headerlink" title="1155555(7)(7)"></a>1155555(7)(7)</h2><h2 id="7-7-5556511-3"><a href="#7-7-5556511-3" class="headerlink" title="(7)(7)5556511"></a>(7)(7)5556511</h2><h2 id="12-3243-321-7-1-1"><a href="#12-3243-321-7-1-1" class="headerlink" title="12 3243 321(7)1"></a>12 3243 321(7)1</h2><h2 id="1-7-6-7-123-7-7"><a href="#1-7-6-7-123-7-7" class="headerlink" title="1(7)(6)(7)123(7)(7)"></a>1(7)(6)(7)123(7)(7)</h2><h2 id="5-5-6-3211-4"><a href="#5-5-6-3211-4" class="headerlink" title="(5)(5)(6)3211"></a>(5)(5)(6)3211</h2><h2 id="1-7-6-7-123-7-7-1"><a href="#1-7-6-7-123-7-7-1" class="headerlink" title="1(7)(6)(7)123(7)(7)"></a>1(7)(6)(7)123(7)(7)</h2><h2 id="6-3211"><a href="#6-3211" class="headerlink" title="(6)3211"></a>(6)3211</h2><h2 id="1155555-7-7-4"><a href="#1155555-7-7-4" class="headerlink" title="1155555(7)(7)"></a>1155555(7)(7)</h2><h2 id="7-7-5556511-4"><a href="#7-7-5556511-4" class="headerlink" title="(7)(7)5556511"></a>(7)(7)5556511</h2><h2 id="12-3243-3243-32435-2"><a href="#12-3243-3243-32435-2" class="headerlink" title="12 3243 3243 32435"></a>12 3243 3243 32435</h2><h2 id="1155555-7-7-5"><a href="#1155555-7-7-5" class="headerlink" title="1155555(7)(7)"></a>1155555(7)(7)</h2><h2 id="7-7-5556511-5"><a href="#7-7-5556511-5" class="headerlink" title="(7)(7)5556511"></a>(7)(7)5556511</h2><h2 id="12-3243-321-7-1-23"><a href="#12-3243-321-7-1-23" class="headerlink" title="12 3243 321(7)1 23"></a>12 3243 321(7)1 23</h2><h2 id="1155555-7-7-6"><a href="#1155555-7-7-6" class="headerlink" title="1155555(7)(7)"></a>1155555(7)(7)</h2><h2 id="7-7-5556511-6"><a href="#7-7-5556511-6" class="headerlink" title="(7)(7)5556511"></a>(7)(7)5556511</h2><h2 id="12-3243-3243-32435-3"><a href="#12-3243-3243-32435-3" class="headerlink" title="12 3243 3243 32435"></a>12 3243 3243 32435</h2><h2 id="1155555-7-7-7"><a href="#1155555-7-7-7" class="headerlink" title="1155555(7)(7)"></a>1155555(7)(7)</h2><h2 id="7-7-5556511-7"><a href="#7-7-5556511-7" class="headerlink" title="(7)(7)5556511"></a>(7)(7)5556511</h2><h2 id="12-3243-321-7-1-2"><a href="#12-3243-321-7-1-2" class="headerlink" title="12 3243 321(7)1"></a>12 3243 321(7)1</h2><h2 id="12-3243-321-7-1-3"><a href="#12-3243-321-7-1-3" class="headerlink" title="12 3243 321(7)1"></a>12 3243 321(7)1</h2>]]></content>
    
    
    <categories>
      
      <category>口琴简谱</category>
      
    </categories>
    
    
    <tags>
      
      <tag>口琴</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>口琴谱-太阳照常升起</title>
    <link href="/2024/01/28/%E5%8F%A3%E7%90%B4%E8%B0%B1-%E5%A4%AA%E9%98%B3%E7%85%A7%E5%B8%B8%E5%8D%87%E8%B5%B7/"/>
    <url>/2024/01/28/%E5%8F%A3%E7%90%B4%E8%B0%B1-%E5%A4%AA%E9%98%B3%E7%85%A7%E5%B8%B8%E5%8D%87%E8%B5%B7/</url>
    
    <content type="html"><![CDATA[<p>吹奏难度：4</p><h2 id="2-6-6-6-6-6"><a href="#2-6-6-6-6-6" class="headerlink" title="(2) (6) (6) (6) (#6) (6)"></a>(2) (6) (6) (6) (#6) (6)</h2><h2 id="6-6-1-2-2-1-1-6"><a href="#6-6-1-2-2-1-1-6" class="headerlink" title="(6) (#6) 1 2 2 1 1 (6)"></a>(6) (#6) 1 2 2 1 1 (6)</h2><h2 id="2-5-5-5-6-5-6"><a href="#2-5-5-5-6-5-6" class="headerlink" title="(2) (5) (5) (5) (6) (5) (6)"></a>(2) (5) (5) (5) (6) (5) (6)</h2><h2 id="1-6-1-3-4-2"><a href="#1-6-1-3-4-2" class="headerlink" title="1 (6) 1 (3) (4) (2)"></a>1 (6) 1 (3) (4) (2)</h2><h2 id="2-4-6-2-1-2"><a href="#2-4-6-2-1-2" class="headerlink" title="(2) (4) (6) 2 1 2"></a>(2) (4) (6) 2 1 2</h2><h2 id="1-2-1-2-1-1-6"><a href="#1-2-1-2-1-1-6" class="headerlink" title="1 2 1 2 1 1 (6)"></a>1 2 1 2 1 1 (6)</h2><h2 id="5-2-1-6-5-6"><a href="#5-2-1-6-5-6" class="headerlink" title="(5) 2 1 (6) (5) (6)"></a>(5) 2 1 (6) (5) (6)</h2><h2 id="5-2-6-6-5-6"><a href="#5-2-6-6-5-6" class="headerlink" title="(5) 2 (#6) (6) (5) (6)"></a>(5) 2 (#6) (6) (5) (6)</h2><h2 id="1-3-4-2"><a href="#1-3-4-2" class="headerlink" title="1 (3) (4) (2)"></a>1 (3) (4) (2)</h2><h2 id="2-6-6-6-6-6-1"><a href="#2-6-6-6-6-6-1" class="headerlink" title="2 6 6 6 #6 6"></a>2 6 6 6 #6 6</h2><h2 id="6-6-【1】-【2】-【2】-【1】-【1】-6"><a href="#6-6-【1】-【2】-【2】-【1】-【1】-6" class="headerlink" title="6 #6 【1】 【2】 【2】 【1】 【1】 6"></a>6 #6 【1】 【2】 【2】 【1】 【1】 6</h2><h2 id="2-5-5-5-6-5-6-1"><a href="#2-5-5-5-6-5-6-1" class="headerlink" title="2 5 5 5 6 5 6"></a>2 5 5 5 6 5 6</h2><h2 id="【1】-6-【1】-3-4-2"><a href="#【1】-6-【1】-3-4-2" class="headerlink" title="【1】 6 【1】 3 4 2"></a>【1】 6 【1】 3 4 2</h2><h2 id="2-4-6-【2】-【1】-【2】"><a href="#2-4-6-【2】-【1】-【2】" class="headerlink" title="2 4 6 【2】 【1】 【2】"></a>2 4 6 【2】 【1】 【2】</h2><h2 id="【1】-【2】-【1】-【2】-【1】-【1】-6"><a href="#【1】-【2】-【1】-【2】-【1】-【1】-6" class="headerlink" title="【1】 【2】 【1】 【2】 【1】 【1】 6"></a>【1】 【2】 【1】 【2】 【1】 【1】 6</h2><h2 id="5-【2】-【1】-6-5-6"><a href="#5-【2】-【1】-6-5-6" class="headerlink" title="5 【2】 【1】 6 5 6"></a>5 【2】 【1】 6 5 6</h2><h2 id="5-【2】-6-6-5-6"><a href="#5-【2】-6-6-5-6" class="headerlink" title="5 【2】 #6 6 5 6"></a>5 【2】 #6 6 5 6</h2><h2 id="【1】-3-4-2"><a href="#【1】-3-4-2" class="headerlink" title="【1】 3 4 2"></a>【1】 3 4 2</h2>]]></content>
    
    
    <categories>
      
      <category>口琴简谱</category>
      
    </categories>
    
    
    <tags>
      
      <tag>口琴</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>thn【script-hexo新建博客并且使用typora打开】</title>
    <link href="/2024/01/28/%E3%80%90thn%E3%80%91(script-hexo%E6%96%B0%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E4%B8%94%E4%BD%BF%E7%94%A8typora%E6%89%93%E5%BC%80)/"/>
    <url>/2024/01/28/%E3%80%90thn%E3%80%91(script-hexo%E6%96%B0%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E4%B8%94%E4%BD%BF%E7%94%A8typora%E6%89%93%E5%BC%80)/</url>
    
    <content type="html"><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>macos<ul><li>14.2.1 (23C71)</li></ul></li><li>版本<ul><li>mac M1</li></ul></li><li>使用条件<ul><li>安装了typora</li><li>配置脚本中hexo的地址</li></ul></li></ul><h2 id="脚本作用"><a href="#脚本作用" class="headerlink" title="脚本作用"></a>脚本作用</h2><p>使用hexo创建的脚本放在_post底下，编辑什么的都不太方便，个人平常习惯使用typora写markdown，所以就有了这个脚本，这个脚本的作用是帮助你创建新博客的同时使用typora打开这个博客并且进行编辑。</p><h2 id="使用效果"><a href="#使用效果" class="headerlink" title="使用效果"></a>使用效果</h2><p>1、查询当前的blog文章 thn -ls</p><p><img src="https://raw.githubusercontent.com/OriKey/picrep/main/img/image-20240228113158010.png" alt="image-20240228113158010"></p><p>2、thn $(thn -ls | grep scrip)<br>直接使用typora打开文档并且进行编辑</p><p><img src="https://raw.githubusercontent.com/OriKey/picrep/main/img/image-20240228113057067.png" alt="image-20240228113057067"></p><p>3、 thn temp</p><p>创建文档</p><p><img src="https://raw.githubusercontent.com/OriKey/picrep/main/img/image-20240228113428932.png" alt="image-20240228113428932"></p><h2 id="脚本定义"><a href="#脚本定义" class="headerlink" title="脚本定义"></a>脚本定义</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查是否提供了必需的参数</span><br>if [ -z &quot;$1&quot; ]; then<br>    echo &quot;Usage: $0 &lt;post_title&gt;&quot;<br>    exit 1<br>fi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">如果传入 --<span class="hljs-built_in">ls</span> 参数，则输出指定路径下的所有文件列表</span><br>if [ &quot;$1&quot; = &quot;-ls&quot; ]; then<br>    ls /Users/lihouhua/IdeaProjects/blog/source/_posts/<br>    exit 0<br>fi<br><span class="hljs-meta prompt_"># </span><span class="language-bash">提取命令行参数中的文章标题</span><br>post_title=&quot;$1&quot;<br>post_title=$&#123;post_title%.md&#125;<br>echo &quot;$post_title&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">指定文章存放路径</span><br>post_path=&quot;/Users/lihouhua/IdeaProjects/blog/source/_posts/$&#123;post_title&#125;.md&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查文件是否已经存在</span><br>if [ -e &quot;$post_path&quot; ]; then<br>    echo &quot;File &#x27;$post_path&#x27; already exists. Skipping Step 1.&quot;<br><br>    # 直接执行 Step 2<br>    typo_command=&quot;open -a typora $post_path&quot;<br>    typo_output=$(eval &quot;$typo_command&quot;)<br><br>    echo &quot;Step 2 Output:&quot;<br>    echo &quot;$typo_output&quot;<br><br>    exit 0<br>fi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Step 1: hexo new 命令</span><br>hexo_new_output=$(hexo new &quot;$post_title&quot;)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">提取 hexo new 输出中的路径</span><br>post_path=$(echo &quot;$hexo_new_output&quot; | grep &quot;Created:&quot; | awk &#x27;&#123;print $3&#125;&#x27;)<br>echo &quot;$post_path&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Step 2: typo 命令</span><br>typo_command=&quot;open -a typora $post_path&quot;<br>typo_output=$(eval &quot;$typo_command&quot;)<br><br>echo &quot;Step 1 Output:&quot;<br>echo &quot;$hexo_new_output&quot;<br><br>echo &quot;Step 2 Output:&quot;<br>echo &quot;$typo_output&quot;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>orikey的私房菜</tag>
      
      <tag>自定义脚本</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git工作流</title>
    <link href="/2024/01/27/git%E5%B7%A5%E4%BD%9C%E6%B5%81/"/>
    <url>/2024/01/27/git%E5%B7%A5%E4%BD%9C%E6%B5%81/</url>
    
    <content type="html"><![CDATA[<h2 id="了解git"><a href="#了解git" class="headerlink" title="了解git"></a>了解git</h2><blockquote><p><strong>Git</strong> (<a href="https://en.wikipedia.org/wiki/Help:IPA/English">&#x2F;ɡɪt&#x2F;</a>)[<a href="https://en.wikipedia.org/wiki/Git#cite_note-:0-9">8]</a> is a <a href="https://en.wikipedia.org/wiki/Distributed_version_control">distributed version control</a> system[<a href="https://en.wikipedia.org/wiki/Git#cite_note-FOOTNOTEChaconStraub201429%E2%80%9331-10">9]</a> that tracks changes in any set of <a href="https://en.wikipedia.org/wiki/Computer_file">computer files</a>, usually used for coordinating work among programmers who are collaboratively developing <a href="https://en.wikipedia.org/wiki/Source_code">source code</a> during <a href="https://en.wikipedia.org/wiki/Software_development">software development</a>. Its goals include speed, <a href="https://en.wikipedia.org/wiki/Data_integrity">data integrity</a>, and support for <a href="https://en.wikipedia.org/wiki/Distributed_computing">distributed</a>, non-linear workflows (thousands of parallel <a href="https://en.wikipedia.org/wiki/Branching_(version_control)">branches</a> running on different computers)</p><p>– git wiki</p></blockquote><p>简单来说git是一个分布式的版本管理工具，它能够追踪每一个文件的变更记录。可能这样说过于抽象了，我们来列举一个更加具体的例子。现在我们有一个文件A，小明在这个里面进行了改动在A文件里面写下了: “我叫小明”，但是有另一个人小张，把我叫小明给改成了 我不叫小明，如果我们使用word或者wps进行的编辑，那么我们就无法知道到底是谁在什么时候改动了这个文件，以及这个文件的历史记录是什么，而git就是能够帮助我们知道某一个文件它的操作记录具体是谁改动的，改动之前和改动之后的区别到底是什么。相信说到这里大家如果是小白的话可能还是对git一头雾水，这里给大家指路到[廖雪峰git教程][<a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000]%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%9C%AC%E6%96%87%E4%B8%BB%E8%A6%81%E7%9A%84%E4%BE%A7%E9%87%8D%E7%82%B9%E8%BF%98%E6%98%AFgit%E5%9C%A8%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E5%BD%93%E4%B8%AD%E5%88%B0%E5%BA%95%E5%85%B7%E4%BD%93%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%EF%BC%8C%E5%AF%B9%E4%BA%8E%E5%9F%BA%E7%A1%80%E5%86%85%E5%AE%B9%E4%B8%8D%E5%86%8D%E9%87%8D%E5%A4%8D%E9%80%A0%E8%BD%AE%E5%AD%90">https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000]，因为本文主要的侧重点还是git在生产环境当中到底具体如何使用，对于基础内容不再重复造轮子</a></p><h2 id="cook"><a href="#cook" class="headerlink" title="cook"></a>cook</h2><p>经过前面的学习大家已经对git有了一些简单的理解，那么从这里开始我们主要聊一下实际工作中的git的工作流到底是什么样子的。</p><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><p>相信大家都知道所有的git文件系统都有一个主干分支 master&#x2F;main 我们在进行生产环境代码上线肯定是只能够上master分支的，别人进行系统开发也肯定是完全依赖于master&#x2F;main分支进行开发，因此我们如果说想要开发自己的代码一般来说会有这样的规范</p><ul><li><p>功能分支：</p><ul><li>feature&#x2F;_xxxx</li><li>feat_xxxxx</li></ul></li><li><p>线上bug修改</p><ul><li>hotfix&#x2F;xxxxx</li><li>hotfix_xxxxx</li></ul></li></ul><p>这两个分支基本上能涵盖掉90%以上个人开发场景，但是有一定的情况下我们可能还会有dev分支和release分支，这两个一般是小团队进行小步迭代代码的时候比较场景，在实际业务开发当中出现的情况比较少，基本上都是新建feat或者hotfix</p><blockquote><p>ok私房菜：在实际进行业务开发的时候，我们可能还会遇到两类分支分别叫做bus分支和env分支，这两类分支通常都不是个人进行建立的，那么这里来个大家介绍一下bus分支，比如我们部门的微服务有多个业务方进行更改的时候，我们不可避免的可能会导致我们部门的微服务多次迭代并且发布，这会导致我们的服务本身并不稳定，并且还可能会出现A和B部门同时修改了一块代码 互为冲突的情况，那么为了解决这种场景，git当中有一种方式是我们部门约定只能每周四进行代码上线，所有更改我们微服务的部门把分支提交到一个共同的bus分支上面去，这样如果有冲突的话能够提前发现，并且也有效的降低了服务发布的次数，当然这样也会有一定的问题，就是一旦需要回滚会直接把所有人的提交全部回滚掉，因此使用bus分支的情况下，我们还有一个额外约定，那就是不允许代码回滚，env分支则是指 测试环境，灰度环境 线上环境 的分支，那么线上的话肯定就是master分支而其余的环境我们则要求代码要合并到具体的测试环境分支上在进行发布</p></blockquote><h2 id="git的一些基操"><a href="#git的一些基操" class="headerlink" title="git的一些基操"></a>git的一些基操</h2><ul><li>当前分支进行了一次错误的commit，回滚最近一次commit<ul><li>git reset HEAD^</li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>orikey的私房菜</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>广告投放</title>
    <link href="/2024/01/27/%E5%B9%BF%E5%91%8A%E6%8A%95%E6%94%BE/"/>
    <url>/2024/01/27/%E5%B9%BF%E5%91%8A%E6%8A%95%E6%94%BE/</url>
    
    <content type="html"><![CDATA[<h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><h2 id="了解广告投放"><a href="#了解广告投放" class="headerlink" title="了解广告投放"></a>了解广告投放</h2><ol><li>广告投放主要是用户增长部门负责的一个职能，主要目的是向三方广告，通过人群包，自建模型等方式，为广告主召回目标人群，这里尤其注意，本文所说的广告投放并不包括品牌广告，主要是信息流，SEM，商店等 程序化投放</li><li>广告投放召回目标人群的方式主要用两种，也就是RTA和RTB，其中RTA为广告主自建模型实时竞价，RTB是我们将模型上传给DSP平台，由广告投放平台自主决定在什么样的场景下展现广告体系</li></ol><h2 id="了解RTA和RTB"><a href="#了解RTA和RTB" class="headerlink" title="了解RTA和RTB"></a>了解RTA和RTB</h2><p>这里直接给大家放两个帖子，我个人认为写的非常好，有兴趣深入了解的同学</p><p>[RTA平台介绍][<a href="https://m.saikr.com/a/559962]">https://m.saikr.com/a/559962]</a></p><p>[RTB平台介绍][<a href="https://www.woshipm.com/marketing/5926942.html]">https://www.woshipm.com/marketing/5926942.html]</a></p><h2 id="归因方式"><a href="#归因方式" class="headerlink" title="归因方式"></a>归因方式</h2>]]></content>
    
    
    <categories>
      
      <category>业务领域知识</category>
      
      <category>doing</category>
      
    </categories>
    
    
    <tags>
      
      <tag>orikey的私房菜</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日语学习</title>
    <link href="/2024/01/27/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0-%E6%95%B0%E5%AD%97%E5%92%8C%E9%A2%9C%E8%89%B2/"/>
    <url>/2024/01/27/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0-%E6%95%B0%E5%AD%97%E5%92%8C%E9%A2%9C%E8%89%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="number-and-color"><a href="#number-and-color" class="headerlink" title="number and color"></a>number and color</h2><table><thead><tr><th>word</th><th>pronuncation</th><th>mean</th></tr></thead><tbody><tr><td>い</td><td>i</td><td></td></tr><tr><td>いち</td><td>i chi</td><td></td></tr><tr><td>に</td><td>n</td><td></td></tr><tr><td>さ</td><td>sa</td><td></td></tr><tr><td>よ</td><td>yo</td><td></td></tr><tr><td>あ</td><td>a</td><td></td></tr><tr><td>な</td><td>na</td><td></td></tr><tr><td>く</td><td>ku</td><td></td></tr><tr><td>お</td><td>o</td><td></td></tr><tr><td>は</td><td>ha</td><td></td></tr><tr><td>あく</td><td>a ku</td><td></td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>日语</tag>
      
      <tag>语言学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ipython</title>
    <link href="/2024/01/24/ipython/"/>
    <url>/2024/01/24/ipython/</url>
    
    <content type="html"><![CDATA[<h2 id="ipython更新"><a href="#ipython更新" class="headerlink" title="ipython更新"></a>ipython更新</h2><p>%load_ext autoreload<br>%autoreload 2</p><p><code>%autoreload</code>:  自动重载<code>%aimport</code>排除的模块之外的所有模块。 <code>%autoreload 0</code>: 禁用自动重载 <code>%autoreload 1</code>: 自动重载<code>%aimport</code>指定的模块。 <code>%autoreload 2</code>: 自动重载<code>%aimport</code>排除的模块之外的所有模块。 <code>%aimport</code>: 列出需要自动重载的模块和不需要重载的模块。 <code>%aimport foo</code>: 重载模块foo并将它标记为需要自动重载。 <code>%aimport -foo</code>: 将模块foo标记为不需要自动重载。</p><h2 id="自定义预设路径"><a href="#自定义预设路径" class="headerlink" title="自定义预设路径"></a>自定义预设路径</h2><p>.ipython&#x2F;profile_default&#x2F;startup&#x2F;startup.py</p><p>在</p><p>if ‘<strong>IPYTHON</strong>‘ in globals():<br>    ipython.magic(‘load_ext autoreload’)<br>    ipython.magic(‘autoreload 2’)</p>]]></content>
    
    
    
    <tags>
      
      <tag>工具使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo用法</title>
    <link href="/2024/01/23/hexo%E7%94%A8%E6%B3%95/"/>
    <url>/2024/01/23/hexo%E7%94%A8%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="hexo工具使用指南"><a href="#hexo工具使用指南" class="headerlink" title="hexo工具使用指南"></a>hexo工具使用指南</h2><ul><li>本地启动<ul><li>hexo s</li></ul></li><li>创建一个新的文档<ul><li>hexo new “layout” “hexo用法”</li></ul></li><li>生成静态文件<ul><li>hexo g</li></ul></li><li>部署到github<ul><li>hexo d</li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>英语语法</title>
    <link href="/2024/01/23/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/"/>
    <url>/2024/01/23/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="时态"><a href="#时态" class="headerlink" title="时态"></a>时态</h2><p>一般现在时和一般现在进行时的区别</p>]]></content>
    
    
    
    <tags>
      
      <tag>语言学习</tag>
      
      <tag>英语</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
